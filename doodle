#!/bin/bash

promptcolor="\033[31m"
bannercolor="\033[32m"
cmdcolor="\033[36m"
commentcolor="\033[1;35m"
sepcolor="\033[37m"
errcolor="\033[1;31m"
nocolor="\033[0m"

dood() {
    line=$*
    firstword=`echo $line | awk -F " " '{print $1}'`

    flag=0
    for w in /bin/rm git pwd pushd popd echo touch cd cp diff mkdir cat; do
	if [ "$firstword" == "$w" ]; then
	    flag=1
	fi
    done

    if [ "$flag" -eq 1 ]; then
	echo -e $sepcolor"----------------------------------------------------------------------"$nocolor
	cmdall="$*"
	cmd=${cmdall%%#*}
	comment=${cmdall##*#}
	if [ "$cmdall" == "$cmd" ]; then
	    echo -e $promptcolor"$ "$nocolor$cmdcolor"$cmd"$nocolor
	else
	    echo -e $promptcolor"$ "$nocolor$cmdcolor"$cmd"$commentcolor"#$comment"$nocolor
	fi

	cmd0=${cmd%%>*}
	cmd1=${cmd##*>}
	if [ "$cmd" == "$cmd0" ]; then
	    $cmd
	else
	    $cmd0 >> $cmd1
	fi
    else
	if [ "${line:0:2}" == "##" ] || [ "${line:0:2}" == "==" ]; then
            echo -e $bannercolor"$*"$nocolor
	else
            echo -e "Error: "$errcolor$line$nocolor
	    exit 100
	fi
    fi
}

dood "######################################################################"

dood "/bin/rm -rf remote/"
dood "/bin/rm -rf local/.git local/foo.txt"

dood "mkdir remote"
dood "git init --bare remote/doodle.git"

dood "pushd local"

dood "======================================================================"

dood "pwd"

dood "git init                                                            # init"
dood "touch foo.txt                                                       # create foo.txt"
dood "git add foo.txt"
dood "git commit -m first-commit                                          # first commit"
dood "git remote add origin ../remote/doodle.git"
dood "git push -u origin master                                           # push"

dood "echo a >> foo.txt                                                   # modify foo.txt"
dood "cat foo.txt"
dood "git add foo.txt"
dood "git commit -m a                                                     # commit a"
dood "git push                                                            # push"

dood "echo b >> foo.txt                                                   # modify foo.txt"
dood "cat foo.txt"
dood "git add foo.txt"
dood "git commit -m b                                                     # commit b"
dood "git push                                                            # push"

echo doodle.git.`git log --pretty=oneline | head -n 1 | cut -c1-7`-`head -c10 /dev/urandom | sha1sum | head -c 3` > /tmp/gitdoodle.bakname
dood "cp -r ../remote/doodle.git ../remote/`cat /tmp/gitdoodle.bakname`"

dood "echo This line is supposed to be a bad line in a bad commit-and-push to be undone. >> foo.txt         # modify foo.txt"
dood "cat foo.txt"
dood "git add foo.txt"

dood "git commit -m bad                                                   # commit bad"
dood "git push                                                            # push"
dood "git log --pretty=oneline"

dood "git push -f origin HEAD^:master                                     # undo push"
dood "git st"
dood "git log --pretty=oneline"

dood "git branch"

dood "git reset --hard HEAD^                                              # get back to previous commit (will lose working tree)"
dood "git st"
dood "git log --pretty=oneline"

dood "diff -r ../remote/`cat /tmp/gitdoodle.bakname` ../remote/doodle.git       # difference before and after push&unpush"

echo doodle.git.`git log --pretty=oneline | head -n 1 | cut -c1-7`-`head -c10 /dev/urandom | sha1sum | head -c 3` > /tmp/gitdoodle.bakname
dood "cp -r ../remote/doodle.git ../remote/`cat /tmp/gitdoodle.bakname`"

dood "echo This line is supposed to be a bad line in a bad commit-and-push to be undone. >> foo.txt         # modify foo.txt"
dood "cat foo.txt"
dood "git add foo.txt"

dood "git commit -m bad                                                   # commit bad"
dood "git push                                                            # push"
dood "git log --pretty=oneline"

dood "git rebase -i HEAD~2                                                # delete the 2nd line in the editor"
dood "git push origin +master                                             # undo push"
dood "git st"
dood "git log --pretty=oneline"

dood "diff -r ../remote/`cat /tmp/gitdoodle.bakname` ../remote/doodle.git       # difference before and after push&unpush"

dood "echo c >> foo.txt                                                   # modify foo.txt"
dood "cat foo.txt"
dood "git add foo.txt"
dood "git commit -m c                                                     # commit c"
dood "git push                                                            # push"

dood "echo d >> foo.txt                                                   # modify foo.txt"
dood "cat foo.txt"
dood "git add foo.txt"
dood "git commit -m d                                                     # commit d"
dood "git push                                                            # push"

dood "git log --pretty=oneline"

dood "======================================================================"

dood "popd"

dood "######################################################################"
